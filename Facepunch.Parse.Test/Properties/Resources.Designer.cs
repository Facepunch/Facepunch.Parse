//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Facepunch.Parse.Test.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Facepunch.Parse.Test.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to token ExprBase
        ///{
        ///    val ValueType : Type;
        ///    val IsConst : Boolean;
        ///}
        ///
        ///token Expression : ExprBase
        ///{
        ///    match &quot;(&quot; (inner:Expression) &quot;)&quot;
        ///    {
        ///        ValueType = inner.ValueType;
        ///        IsConst = inner.IsConst;
        ///    }
        ///    
        ///    match BinExpr.Add;
        ///}
        ///
        ///token BinExpr.Add : Expression
        ///{
        ///    match (lhs:Expression) &quot;+&quot; (rhs:Expression)
        ///    {
        ///        assert(lhs.ValueType.IsNumeric);
        ///        assert(rhs.ValueType.IsNumeric);
        ///    
        ///        ValueType = lhs.ValueType;
        ///        IsConst = lhs.IsC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExampleInput {
            get {
                return ResourceManager.GetString("ExampleInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whitespace = /\s+/;
        ///
        ///Comment = SingleLine | MultiLine
        ///{
        ///    SingleLine = /\/\/[^\n]*(\n|$)/;
        ///    MultiLine = /\/\*([^\*]|\*[^/])*\*\//;
        ///}
        ///
        ///ignore Whitespace | Comment
        ///{
        ///    Language = &quot;&quot; | Token.Definition Language
        ///    {
        ///        Identifier = /[a-z_][a-z0-9_]*/i
        ///        {
        ///            Qualified = Identifier (&quot;.&quot; Qualified | &quot;&quot;);
        ///        }
        ///
        ///        Token.Definition = &quot;token&quot; Header &quot;{&quot; Body &quot;}&quot;
        ///        {
        ///            Header = Identifier.Qualified (&quot;:&quot; Identifier.Qualified | &quot;&quot;);
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExampleLanguage {
            get {
                return ResourceManager.GetString("ExampleLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whitespace = /\s+/;
        ///Comment = SingleLine | MultiLine
        ///{
        ///    SingleLine = /\/\/[^\n]*(\n|$)/;
        ///    MultiLine = /\/\*([^\*]|\*[^/])*\*\//;
        ///}
        ///
        ///ignore Whitespace | Comment
        ///{
        ///    Ident = /[a-z_][a-z0-9_]*/i;
        ///
        ///    Constant = String | Integer | Float | Double
        ///    {
        ///        noignore
        ///        {
        ///            String = &quot;\&quot;&quot; Value &quot;\&quot;&quot;
        ///            {
        ///                Value = Char Value | &quot;&quot;;
        ///                Char = Unescaped | &quot;\\&quot; Escaped
        ///                {
        ///                    Unescaped = /[^&quot;\n]/;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpressionGrammar {
            get {
                return ResourceManager.GetString("ExpressionGrammar", resourceCulture);
            }
        }
    }
}
